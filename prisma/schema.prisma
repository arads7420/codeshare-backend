// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  password     String
  email        String    @unique
  name         String?
  img          String?   @default("https://cdn-icons-png.flaticon.com/512/149/149071.png")
  shortDesc    String?
  about        String?
  githublink   String?
  linkedinlink String?
  posts        Post[]
  comments     Comment[]
  upvotes      Upvote[]
}

model Post {
  id          Int       @id @default(autoincrement())
  logo        String?
  images      String[]
  title       String
  shortDesc   String
  type        Type      @relation(fields: [typeId], references: [id])
  typeId      Int
  link        String
  description String
  category    Category  @relation(fields: [categoryId], references: [id])
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  upvotes     Upvote[]
  categoryId  Int
}

model Type {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

model Category {
  id    Int     @id @default(autoincrement())
  img   String?
  name  String
  desc  String?
  posts Post[]
}

model Comment {
  id     Int    @id @default(autoincrement())
  desc   String
  Post   Post?  @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int?
  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int?
}

model Upvote {
  id     Int  @id @default(autoincrement())
  Post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([userId, postId])
}
